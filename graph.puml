@startuml
package confluence{
class APIClient {
+BaseURL: string
+Space: string
+Username: string
+Password: string
+Client: HTTPClient

}
}
package confluence{
class Page {
+ID: string
+Type: string
+Status: string
+Title: string
+Space: SpaceObj
+Version: VersionObj
+Body: BodyObj

}
}
package confluence{
class SpaceObj {
+Key: string

}
}
package confluence{
class BodyObj {
+Storage: StorageObj

}
}
package confluence{
class StorageObj {
+Value: string
+Representation: string

}
}
package confluence{
class VersionObj {
+Number: int

}
}
package confluence{
class PageResults {
+Results: []Page

}
}
package confluence.test.confluencemocks{
class MockHTTPClient {
-ctrl: *Controller
-recorder: *MockHTTPClientMockRecorder
+*EXPECT(): *MockHTTPClientMockRecorder
+*Do(req *Request): *Response, error
}
}
package confluence.test.confluencemocks{
class MockHTTPClientMockRecorder {
-mock: *MockHTTPClient
+*Do(req interface): *Call
}
}
package markdown{
class FileContents {
+MetaData: map[string]interface
+Body: []byte

}
}
Page --> SpaceObj
Page --> BodyObj
Page --> VersionObj
BodyObj --> StorageObj
@enduml